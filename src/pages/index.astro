---
import Page from "@/layouts/Page.astro";
import TopPostList from "@/components/TopPostList.astro";
import logo from "/logo-plus.svg?raw";
---

<Page title="TOP" pageClass="index">
  <div class="top-post-list" slot="list">
    <TopPostList />
  </div>
  <div class="content" slot="content">
    <div class="top-logo-plus">
      <Fragment set:html={logo} />
    </div>
    <div id="canvas-wrap"></div>
  </div>
</Page>
<style lang="scss" is:global>
  .top-logo-plus {
    @include abs-center;
    z-index: 999;
    svg {
      width: 100%;
      height: 100%;
    }
  }
  #canvas-wrap {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    canvas {
      position: absolute;
      top: 0;
      left: 0;
    }
  }
</style>

<script>
  import p5 from "p5";

  const sketch = (p: p5) => {
    let baseNum = 0;
    let resetCount = -1;
    let searchCount = 50;
    let startCount = 0;
    let drawCount = 0;
    let xyArr = [];
    p.setup = () => {
      const canvas = p.createCanvas(window.innerWidth / 2, window.innerHeight);
      canvas.parent("#canvas-wrap");
    };

    p.draw = () => {
      console.log(startCount, resetCount);
      if (startCount > 0) {
        startCount--;
      } else {
        if (resetCount <= 0) {
          console.log("reset-------------");
          reset();
        } else {
          let c = p.color(6, 0, 255);
          p.fill(c);
          p.noStroke();
          // console.log(resetCount)
          while (drawCount > 0 && resetCount > 0) {
            const xy = getXY();
            p.square(xy[0], xy[1], baseNum);
            console.log("draw");
            resetCount--;
            drawCount--;
          }
          if (resetCount > 0) {
            resetDrawCount();
          }
        }
      }
    };

    function containsSubarray(arr, subarr) {
      return arr.some(
        (element) => element[0] === subarr[0] && element[1] === subarr[1]
      );
    }

    function getXY() {
      let returnArr = [];
      function getReturnArr() {
        returnArr = [
          getDivNum(p.random(p.width), baseNum),
          getDivNum(p.random(p.height), baseNum),
        ];
      }
      getReturnArr();
      while (containsSubarray(xyArr, returnArr)) {
        console.log(searchCount);
        getReturnArr();
        searchCount--;
        if (searchCount == 0) {
          reset();
          return false;
        }
      }
      resetSearchCount();
      xyArr.push(returnArr);
      return returnArr;
    }

    function getDivNum(val, num) {
      return Math.floor(val / num) * num;
    }

    function resetSearchCount() {
      searchCount = 400;
    }
    function resetDrawCount() {
      if (resetCount > 300) {
        drawCount = Math.floor(150 / baseNum);
      } else if (resetCount > 50) {
        drawCount = Math.floor(100 / baseNum);
      } else {
        drawCount = 1;
      }
    }
    function reset() {
      p.background("#0600ff");
      baseNum = Math.max(Math.floor(p.random(100)), 10);
      resetCount = Math.ceil(p.width / baseNum) * Math.ceil(p.height / baseNum);
      resetDrawCount();
      resetSearchCount();
      xyArr = [];
      p.clear();
      startCount = 60;
    }
  };

  new p5(sketch);
</script>
